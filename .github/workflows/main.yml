name: Postgres Service Example

on:
  push:
    branches:
    - mainline


jobs:
  container-job:
    runs-on: ubuntu-latest
    
    # runs all of the steps inside the specified container rather than on the VM host.  
    # Because of this the network configuration changes from host based network to a container network.
    
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ubuntu
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1     
    - run: npm install npm@5
    - run: sudo -i
    - run: cd FargateECSAppWithLoadbalancer/
    - run:  sudo su - postgres
    - run: sudo netstat -nlp | grep 5432
    
    - run:  psql -d postgres -a -f postgres.sql
    
      
      env:
        # use postgres for the host here because we have specified a container for the job.
        # If we were running the job on the VM this would be localhost
        POSTGRES_HOST: localhost
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}

